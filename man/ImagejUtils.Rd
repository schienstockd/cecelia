% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imagejUtils.R
\name{ImagejUtils}
\alias{ImagejUtils}
\title{Utils to call ImageJ}
\description{
Utils to call ImageJ
}
\examples{
TODO
}
\section{Super class}{
\code{\link[R6P:Singleton]{R6P::Singleton}} -> \code{ImagejUtils}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ImagejUtils-initParams}{\code{ImagejUtils$initParams()}}
\item \href{#method-ImagejUtils-runDonblo}{\code{ImagejUtils$runDonblo()}}
\item \href{#method-ImagejUtils-createFromSequence}{\code{ImagejUtils$createFromSequence()}}
\item \href{#method-ImagejUtils-exportImage}{\code{ImagejUtils$exportImage()}}
\item \href{#method-ImagejUtils-prepJythonParams}{\code{ImagejUtils$prepJythonParams()}}
\item \href{#method-ImagejUtils-runJython}{\code{ImagejUtils$runJython()}}
\item \href{#method-ImagejUtils-clone}{\code{ImagejUtils$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="R6P" data-topic="Singleton" data-id="initialize"><a href='../../R6P/html/Singleton.html#method-Singleton-initialize'><code>R6P::Singleton$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ImagejUtils-initParams"></a>}}
\if{latex}{\out{\hypertarget{method-ImagejUtils-initParams}{}}}
\subsection{Method \code{initParams()}}{
Init params
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImagejUtils$initParams(fijiPath, scriptsPath)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fijiPath}}{character for file path to ImageJ}

\item{\code{scriptsPath}}{character for file path to ImageJ scripts/macros}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ImagejUtils-runDonblo"></a>}}
\if{latex}{\out{\hypertarget{method-ImagejUtils-runDonblo}{}}}
\subsection{Method \code{runDonblo()}}{
Run donblo segmentation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImagejUtils$runDonblo(
  imPath,
  blobChannels = list(),
  donutChannels = list(),
  cellRadius = 3,
  gaussianFilter = 1L,
  medianFilter = 1L,
  minimumFilter = 1L,
  maximumFilter = 1L,
  detectionThreshAdj = 0.4,
  filteringAfterSeg = 0L,
  rollingRadius = 10L,
  segPath = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{imPath}}{character for file path to image}

\item{\code{blobChannels}}{list of numeric for blob channels}

\item{\code{donutChannels}}{list of numeric for donut channels}

\item{\code{cellRadius}}{numeric for cell radius}

\item{\code{gaussianFilter}}{integer for gaussian filter}

\item{\code{medianFilter}}{integer for median filter}

\item{\code{minimumFilter}}{integer for minimum filter}

\item{\code{maximumFilter}}{integer for maximum filter}

\item{\code{detectionThreshAdj}}{numeric for threshold adjustment}

\item{\code{filteringAfterSeg}}{integer for post segmentation filter}

\item{\code{rollingRadius}}{integer for rolling ball filter}

\item{\code{segPath}}{character for file path to save segmentation}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ImagejUtils-createFromSequence"></a>}}
\if{latex}{\out{\hypertarget{method-ImagejUtils-createFromSequence}{}}}
\subsection{Method \code{createFromSequence()}}{
Create image from sequence
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImagejUtils$createFromSequence(imPathIn, imPathOut, switchZforC = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{imPathIn}}{character for file path to image}

\item{\code{imPathOut}}{character for file path to out}

\item{\code{switchZforC}}{integer (0,1) to switch 'C' and 'Z'}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ImagejUtils-exportImage"></a>}}
\if{latex}{\out{\hypertarget{method-ImagejUtils-exportImage}{}}}
\subsection{Method \code{exportImage()}}{
Export image
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImagejUtils$exportImage(imPathIn, imPathOut)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{imPathIn}}{character for file path to image}

\item{\code{imPathOut}}{character for file path to out}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ImagejUtils-prepJythonParams"></a>}}
\if{latex}{\out{\hypertarget{method-ImagejUtils-prepJythonParams}{}}}
\subsection{Method \code{prepJythonParams()}}{
Prepare parameters for jython
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImagejUtils$prepJythonParams(scriptParams)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{scriptParams}}{list of list of characters for parameters}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ImagejUtils-runJython"></a>}}
\if{latex}{\out{\hypertarget{method-ImagejUtils-runJython}{}}}
\subsection{Method \code{runJython()}}{
Run script with parameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImagejUtils$runJython(scriptName, scriptParams)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{scriptName}}{character for script name}

\item{\code{scriptParams}}{list of list of characters for parameters}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ImagejUtils-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ImagejUtils-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImagejUtils$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
