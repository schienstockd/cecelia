% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cciaImageSet.R
\name{CciaImageSet}
\alias{CciaImageSet}
\title{Reactive image object set}
\description{
Reactive image object set
}
\examples{
TODO
}
\section{Super classes}{
\code{\link[cecelia:ReactiveObject]{cecelia::ReactiveObject}} -> \code{\link[cecelia:ReactivePersistentObject]{cecelia::ReactivePersistentObject}} -> \code{\link[cecelia:ReactivePersistentObjectSet]{cecelia::ReactivePersistentObjectSet}} -> \code{CciaImageSet}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CciaImageSet-new}{\code{CciaImageSet$new()}}
\item \href{#method-CciaImageSet-propagatePopMap}{\code{CciaImageSet$propagatePopMap()}}
\item \href{#method-CciaImageSet-propagateFlowGating}{\code{CciaImageSet$propagateFlowGating()}}
\item \href{#method-CciaImageSet-cciaObjectsChannelNames}{\code{CciaImageSet$cciaObjectsChannelNames()}}
\item \href{#method-CciaImageSet-editChannelNamesForCciaObjects}{\code{CciaImageSet$editChannelNamesForCciaObjects()}}
\item \href{#method-CciaImageSet-ppp}{\code{CciaImageSet$ppp()}}
\item \href{#method-CciaImageSet-spatialDT}{\code{CciaImageSet$spatialDT()}}
\item \href{#method-CciaImageSet-popDT}{\code{CciaImageSet$popDT()}}
\item \href{#method-CciaImageSet-tracks}{\code{CciaImageSet$tracks()}}
\item \href{#method-CciaImageSet-tracksMeasures}{\code{CciaImageSet$tracksMeasures()}}
\item \href{#method-CciaImageSet-tracksInfo}{\code{CciaImageSet$tracksInfo()}}
\item \href{#method-CciaImageSet-segmentedCells}{\code{CciaImageSet$segmentedCells()}}
\item \href{#method-CciaImageSet-retrieveState}{\code{CciaImageSet$retrieveState()}}
\item \href{#method-CciaImageSet-resetData}{\code{CciaImageSet$resetData()}}
\item \href{#method-CciaImageSet-forceDataReload}{\code{CciaImageSet$forceDataReload()}}
\item \href{#method-CciaImageSet-setFlowAutospillPath}{\code{CciaImageSet$setFlowAutospillPath()}}
\item \href{#method-CciaImageSet-flowAutospillPath}{\code{CciaImageSet$flowAutospillPath()}}
\item \href{#method-CciaImageSet-flowAutospillMatrix}{\code{CciaImageSet$flowAutospillMatrix()}}
\item \href{#method-CciaImageSet-clone}{\code{CciaImageSet$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactiveObject" data-id="reactive"><a href='../../cecelia/html/ReactiveObject.html#method-ReactiveObject-reactive'><code>cecelia::ReactiveObject$reactive()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactiveObject" data-id="update"><a href='../../cecelia/html/ReactiveObject.html#method-ReactiveObject-update'><code>cecelia::ReactiveObject$update()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="addCciaAttr"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-addCciaAttr'><code>cecelia::ReactivePersistentObject$addCciaAttr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="delCciaAttr"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-delCciaAttr'><code>cecelia::ReactivePersistentObject$delCciaAttr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="deleteObjectDirectory"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-deleteObjectDirectory'><code>cecelia::ReactivePersistentObject$deleteObjectDirectory()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="editCciaAttr"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-editCciaAttr'><code>cecelia::ReactivePersistentObject$editCciaAttr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="finalize"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-finalize'><code>cecelia::ReactivePersistentObject$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="getCciaAttr"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-getCciaAttr'><code>cecelia::ReactivePersistentObject$getCciaAttr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="getCciaClass"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-getCciaClass'><code>cecelia::ReactivePersistentObject$getCciaClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="getCciaLogfile"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-getCciaLogfile'><code>cecelia::ReactivePersistentObject$getCciaLogfile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="getCciaMeta"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-getCciaMeta'><code>cecelia::ReactivePersistentObject$getCciaMeta()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="getCciaName"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-getCciaName'><code>cecelia::ReactivePersistentObject$getCciaName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="getCciaType"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-getCciaType'><code>cecelia::ReactivePersistentObject$getCciaType()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="getUID"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-getUID'><code>cecelia::ReactivePersistentObject$getUID()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="isTransaction"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-isTransaction'><code>cecelia::ReactivePersistentObject$isTransaction()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="lockReleased"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-lockReleased'><code>cecelia::ReactivePersistentObject$lockReleased()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="logfile"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-logfile'><code>cecelia::ReactivePersistentObject$logfile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="logfileNames"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-logfileNames'><code>cecelia::ReactivePersistentObject$logfileNames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="moduleFunParams"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-moduleFunParams'><code>cecelia::ReactivePersistentObject$moduleFunParams()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="objFiles"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-objFiles'><code>cecelia::ReactivePersistentObject$objFiles()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="persistentObjectDirectory"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-persistentObjectDirectory'><code>cecelia::ReactivePersistentObject$persistentObjectDirectory()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="persistentObjectDirectoryFile"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-persistentObjectDirectoryFile'><code>cecelia::ReactivePersistentObject$persistentObjectDirectoryFile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="runTask"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-runTask'><code>cecelia::ReactivePersistentObject$runTask()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="saveModuleFunParams"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-saveModuleFunParams'><code>cecelia::ReactivePersistentObject$saveModuleFunParams()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="setCciaAttr"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-setCciaAttr'><code>cecelia::ReactivePersistentObject$setCciaAttr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="setCciaClass"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-setCciaClass'><code>cecelia::ReactivePersistentObject$setCciaClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="setCciaLogfile"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-setCciaLogfile'><code>cecelia::ReactivePersistentObject$setCciaLogfile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="setCciaMeta"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-setCciaMeta'><code>cecelia::ReactivePersistentObject$setCciaMeta()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="setCciaName"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-setCciaName'><code>cecelia::ReactivePersistentObject$setCciaName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="setCciaType"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-setCciaType'><code>cecelia::ReactivePersistentObject$setCciaType()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="setUID"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-setUID'><code>cecelia::ReactivePersistentObject$setUID()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="taskConf"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-taskConf'><code>cecelia::ReactivePersistentObject$taskConf()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObject" data-id="version"><a href='../../cecelia/html/ReactivePersistentObject.html#method-ReactivePersistentObject-version'><code>cecelia::ReactivePersistentObject$version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="addAttrForCciaObjects"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-addAttrForCciaObjects'><code>cecelia::ReactivePersistentObjectSet$addAttrForCciaObjects()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="addCciaObjects"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-addCciaObjects'><code>cecelia::ReactivePersistentObjectSet$addCciaObjects()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjectByUID"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjectByUID'><code>cecelia::ReactivePersistentObjectSet$cciaObjectByUID()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjectMetas"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjectMetas'><code>cecelia::ReactivePersistentObjectSet$cciaObjectMetas()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjectNames"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjectNames'><code>cecelia::ReactivePersistentObjectSet$cciaObjectNames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjectUIDs"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjectUIDs'><code>cecelia::ReactivePersistentObjectSet$cciaObjectUIDs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjects"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjects'><code>cecelia::ReactivePersistentObjectSet$cciaObjects()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjectsAttrNames"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjectsAttrNames'><code>cecelia::ReactivePersistentObjectSet$cciaObjectsAttrNames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjectsByAttr"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjectsByAttr'><code>cecelia::ReactivePersistentObjectSet$cciaObjectsByAttr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="cciaObjectsByUIDs"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-cciaObjectsByUIDs'><code>cecelia::ReactivePersistentObjectSet$cciaObjectsByUIDs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="delAttrForCciaObjects"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-delAttrForCciaObjects'><code>cecelia::ReactivePersistentObjectSet$delAttrForCciaObjects()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="editAttrForCciaObjects"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-editAttrForCciaObjects'><code>cecelia::ReactivePersistentObjectSet$editAttrForCciaObjects()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="getCciaObjectUIDs"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-getCciaObjectUIDs'><code>cecelia::ReactivePersistentObjectSet$getCciaObjectUIDs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="removeCciaObjectByUID"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-removeCciaObjectByUID'><code>cecelia::ReactivePersistentObjectSet$removeCciaObjectByUID()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="removeCciaObjects"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-removeCciaObjects'><code>cecelia::ReactivePersistentObjectSet$removeCciaObjects()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="runTasks"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-runTasks'><code>cecelia::ReactivePersistentObjectSet$runTasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="saveState"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-saveState'><code>cecelia::ReactivePersistentObjectSet$saveState()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="setCciaObjectUIDs"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-setCciaObjectUIDs'><code>cecelia::ReactivePersistentObjectSet$setCciaObjectUIDs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="cecelia" data-topic="ReactivePersistentObjectSet" data-id="summary"><a href='../../cecelia/html/ReactivePersistentObjectSet.html#method-ReactivePersistentObjectSet-summary'><code>cecelia::ReactivePersistentObjectSet$summary()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-new"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-new}{}}}
\subsection{Method \code{new()}}{
Init
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$new(stateFile, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{stateFile}}{character with file path to state file}

\item{\code{...}}{passed to super$initialize}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-propagatePopMap"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-propagatePopMap}{}}}
\subsection{Method \code{propagatePopMap()}}{
Propagate population map to others
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$propagatePopMap(
  popType,
  fromUID,
  toUIDs = NULL,
  invalidate = FALSE,
  saveState = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{popType}}{character for population type}

\item{\code{fromUID}}{character for unique ID from}

\item{\code{toUIDs}}{character for unique ID to}

\item{\code{invalidate}}{boolean to invalidate object}

\item{\code{saveState}}{boolean to save state}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-propagateFlowGating"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-propagateFlowGating}{}}}
\subsection{Method \code{propagateFlowGating()}}{
Propagate flow gating to others
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$propagateFlowGating(
  fromUID,
  toUIDs = NULL,
  invalidate = FALSE,
  saveState = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fromUID}}{character for unique ID from}

\item{\code{toUIDs}}{character for unique ID to}

\item{\code{invalidate}}{boolean to invalidate object}

\item{\code{saveState}}{boolean to save state}

\item{\code{...}}{passed to FlowGatingSet$copyGatesFrom}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-cciaObjectsChannelNames"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-cciaObjectsChannelNames}{}}}
\subsection{Method \code{cciaObjectsChannelNames()}}{
Channels for objects
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$cciaObjectsChannelNames(cciaObjects = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cciaObjects}}{list of ReactivePersistentObject}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-editChannelNamesForCciaObjects"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-editChannelNamesForCciaObjects}{}}}
\subsection{Method \code{editChannelNamesForCciaObjects()}}{
Edit channel names for objects
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$editChannelNamesForCciaObjects(
  objChannelNum,
  objChannelNames,
  cciaObjects = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{objChannelNum}}{integer for channel number}

\item{\code{objChannelNames}}{list of character channel names}

\item{\code{cciaObjects}}{list of ReactivePersistentObject}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-ppp"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-ppp}{}}}
\subsection{Method \code{ppp()}}{
ppps for images
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$ppp(removeNULL = TRUE, uIDs = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{removeNULL}}{boolean to remove NULL}

\item{\code{uIDs}}{list of character for unique IDs}

\item{\code{...}}{passed to CciaImage$ppp}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-spatialDT"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-spatialDT}{}}}
\subsection{Method \code{spatialDT()}}{
Spatial DTs for images
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$spatialDT(asDT = TRUE, removeNULL = TRUE, uIDs = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{asDT}}{boolean to convert to data.table}

\item{\code{removeNULL}}{boolean to remove NULL}

\item{\code{uIDs}}{list of character for unique IDs}

\item{\code{...}}{passed to CciaImage$spatialDT}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-popDT"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-popDT}{}}}
\subsection{Method \code{popDT()}}{
popDTs for images
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$popDT(
  asDT = TRUE,
  removeNULL = TRUE,
  uIDs = NULL,
  colsToNormalise = c(),
  batchGroup = "uID",
  normPercentile = 0.998,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{asDT}}{boolean to convert to data.table}

\item{\code{removeNULL}}{boolean to remove NULL}

\item{\code{uIDs}}{list of character for unique IDs}

\item{\code{colsToNormalise}}{list of character for columns to normalise}

\item{\code{batchGroup}}{character to identify batch groups}

\item{\code{normPercentile}}{numeric for percentile to normalise}

\item{\code{...}}{passed to CciaImage$popDT}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-tracks"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-tracks}{}}}
\subsection{Method \code{tracks()}}{
Tracks for images
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$tracks(pop, removeNULL = TRUE, uIDs = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pop}}{character for population}

\item{\code{removeNULL}}{boolean to remove NULL}

\item{\code{uIDs}}{list of character for unique IDs}

\item{\code{...}}{passed to CciaImage$tracks}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-tracksMeasures"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-tracksMeasures}{}}}
\subsection{Method \code{tracksMeasures()}}{
Tracks measurements for images
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$tracksMeasures(
  measures,
  asDT = TRUE,
  removeNULL = TRUE,
  uIDs = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{measures}}{list of character for track measurements}

\item{\code{removeNULL}}{boolean to remove NULL}

\item{\code{uIDs}}{list of character for unique IDs}

\item{\code{...}}{passed to CciaImage$tracksMeasures}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-tracksInfo"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-tracksInfo}{}}}
\subsection{Method \code{tracksInfo()}}{
Tracks info for images
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$tracksInfo(
  trackStatsNames,
  parentPop,
  asDT = TRUE,
  removeNULL = TRUE,
  uIDs = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{trackStatsNames}}{list of character for track statistics}

\item{\code{parentPop}}{character for parent population}

\item{\code{removeNULL}}{boolean to remove NULL}

\item{\code{uIDs}}{list of character for unique IDs}

\item{\code{...}}{passed to CciaImage$tracksInfo}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-segmentedCells"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-segmentedCells}{}}}
\subsection{Method \code{segmentedCells()}}{
Segmented cells object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$segmentedCells(cellTypeString = "pop", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cellTypeString}}{character for cell type}

\item{\code{...}}{passed to self$popDT}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-retrieveState"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-retrieveState}{}}}
\subsection{Method \code{retrieveState()}}{
Load objects
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$retrieveState(reset = FALSE, forceDataReload = FALSE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reset}}{boolean to reset data}

\item{\code{forceDataReload}}{boolean to force reload data}

\item{\code{...}}{passed to super$retrieveState}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-resetData"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-resetData}{}}}
\subsection{Method \code{resetData()}}{
Reset data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$resetData()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-forceDataReload"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-forceDataReload}{}}}
\subsection{Method \code{forceDataReload()}}{
Force reload data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$forceDataReload()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-setFlowAutospillPath"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-setFlowAutospillPath}{}}}
\subsection{Method \code{setFlowAutospillPath()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$setFlowAutospillPath(
  x,
  valueName = NULL,
  setDefault = TRUE,
  invalidate = TRUE,
  reset = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-flowAutospillPath"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-flowAutospillPath}{}}}
\subsection{Method \code{flowAutospillPath()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$flowAutospillPath(valueName = NULL, absolutePath = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-flowAutospillMatrix"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-flowAutospillMatrix}{}}}
\subsection{Method \code{flowAutospillMatrix()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$flowAutospillMatrix(valueName = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CciaImageSet-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CciaImageSet-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CciaImageSet$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
