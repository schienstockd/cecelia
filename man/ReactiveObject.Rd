% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reactiveObject.R
\name{ReactiveObject}
\alias{ReactiveObject}
\title{Adapted from
https://community.rstudio.com/t/good-way-to-create-a-reactive-aware-r6-class/84890/8}
\description{
Shiny reactive object
}
\examples{
## init reactive object
reactObj <- ReactiveObject$new()
reactObj$reactive()
reactObj() # will react in context
## init not-reactive object
reactObj <- ReactiveObject$new(initReactivity = FALSE)
reactObj # normal/non-reactive object
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ReactiveObject-new}{\code{ReactiveObject$new()}}
\item \href{#method-ReactiveObject-reactive}{\code{ReactiveObject$reactive()}}
\item \href{#method-ReactiveObject-update}{\code{ReactiveObject$update()}}
\item \href{#method-ReactiveObject-clone}{\code{ReactiveObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReactiveObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-ReactiveObject-new}{}}}
\subsection{Method \code{new()}}{
Invalidate object; not invalidating the object cause shiny
not to react to changes on the object. This is a workaround
as the individual attributes of the object are not reactive
themselves.


Check if the object is reactive.


Init class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReactiveObject$new(session = NULL, initReactivity = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{Set current session of shiny context}

\item{\code{initReactivity}}{Boolean whether object is reactive or not}

\item{\code{invalidate}}{Invalidate or not}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReactiveObject-reactive"></a>}}
\if{latex}{\out{\hypertarget{method-ReactiveObject-reactive}{}}}
\subsection{Method \code{reactive()}}{
Init reactivity of object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReactiveObject$reactive()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReactiveObject-update"></a>}}
\if{latex}{\out{\hypertarget{method-ReactiveObject-update}{}}}
\subsection{Method \code{update()}}{
In the rare case you want to trigger invalidate
from outside the object. This should ideally NOT be used.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReactiveObject$update()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReactiveObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ReactiveObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReactiveObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
